plugins {
    id 'com.github.hierynomus.license' version '0.13.1'
    id 'com.github.kt3k.coveralls' version '2.8.1'
    id 'com.gradle.plugin-publish' version '0.16.0'
    id 'java-gradle-plugin'
    id 'groovy'
    id 'jacoco'
    id 'maven-publish'
    id 'com.stehno.gradle.webpreview' version '0.2.0'
    id 'org.asciidoctor.convert' version '1.5.3'
    id 'com.stehno.gradle.site' version '0.0.3'
    id 'org.ajoberstar.git-publish' version '3.0.0'
}

version = '0.2.0'
group = 'it.salmattia.http-plugin'

sourceCompatibility = 8
targetCompatibility = 8

repositories {
    jcenter()
}

configurations {
    groovyDoc
}

dependencies {
    implementation gradleApi()
    implementation localGroovy()

    groovyDoc 'org.codehaus.groovy:groovy-groovydoc:3.0.7'
    groovyDoc 'org.codehaus.groovy:groovy-ant:3.0.7'

    // TODO: ideally the plugin would download the desired client only
    implementation("io.github.http-builder-ng:http-builder-ng-apache:$httpBuilderVersion") {
        exclude module: 'groovy-all'
    }
    implementation("io.github.http-builder-ng:http-builder-ng-okhttp:$httpBuilderVersion") {
        exclude module: 'groovy-all'
    }

    testImplementation('org.spockframework:spock-core:2.0-groovy-3.0') {
        exclude module: 'groovy-all'
    }
    testImplementation('com.stehno.ersatz:ersatz:1.5.0') {
        exclude module: 'groovy-all'
        exclude group: 'ch.qos.logback'
    }
}

test {
    maxParallelForks = Math.min(Runtime.runtime.availableProcessors(), 8)
}

groovydoc {
    groovyClasspath = configurations.groovyDoc
}

asciidoctor {
    options doctype: 'book'

    backends = ['html5']

    attributes 'source-highlighter': 'coderay',
        'coderay-linenums-mode': 'table',
        icon: 'font',
        linkattrs: true,
        encoding: 'utf-8'
}

license {
    header rootProject.file('config/license_header.txt')
    ext.year = Calendar.instance.get(Calendar.YEAR)
}

gradlePlugin {
    plugins {
        httpPlugin {
            id = 'it.salmattia.http-plugin.http-plugin'
            implementationClass = 'io.github.httpbuilderng.http.HttpPlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/salmattia/gradle-http-plugin'
    vcsUrl = 'https://github.com/salmattia/gradle-http-plugin'
    description = 'Gradle plugin to aid in creating HTTP calls as tasks.'
    tags = ['gradle', 'groovy']

    plugins {
        httpPlugin {
            id = 'it.salmattia.http-plugin.http-plugin'
            displayName = 'Gradle HTTP Plugin'
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

task publishSite(type: GradleBuild, group: 'Publishing', description: 'Publishes the documentation web site.', dependsOn: ['site']) {
    tasks = ['gitPublishPush']
}

site {
    versionedFile 'src/docs/asciidoc/index.adoc'
    assetDir '**/fonts/**'
}

gitPublish {
    repoUri = 'https://github.com/salmattia/gradle-http-plugin.git'
    branch = 'gh-pages'

    contents {
        from(file('build/site')) {
            into '.'
        }
    }
}

tasks.site.dependsOn = ['build', 'jacocoTestReport', 'groovydoc', 'asciidoctor']
